---
# tasks file for mysql

- name: Install Mysql
  become: true
  package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "{{ mysql_packages }}"


- name: create db
  become: true
  mysql_db:
     name: "{{ db_name }}"
     state: present

- name: create mysql user
  become: true
  mysql_user:
     name: "{{ db_user }}"
     password: "{{ db_password }}"
     priv: "*.*:ALL,GRANT"
     host: '%'
     state: present

- name: creating mysql user replication  #Создание бд и пароля назначение привилегий slave
  mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_user_password }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    host: "%"
    state: present
    login_user: "{{ db_user }}"
    login_password: "{{ db_password }}"

- name: Enable remote login to mysql
  become: true
  lineinfile:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     regexp: '^bind-address'
     line: 'bind-address = 0.0.0.0'
     backup: yes

- name: restart mysql
  become: true
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

# rep task

- name: Replace master.cnf
  become: true
  template:
    src=templates/master.cnf
    dest=/etc/mysql/mysql.conf.d/master.cnf
  when:
    - inventory_hostname in groups["db01"]

- name: restart mysql
  become: true
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Replace slave.cnf
  become: true
  template:
    src=templates/slave.cnf
    dest=/etc/mysql/mysql.conf.d/slave.cnf
  when:
    - inventory_hostname in groups["db02"]

- name: restart mysql
  become: true
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: check slave replication status
  become: true
  mysql_replication:
    mode: getslave
  register: replica
  when:
    - inventory_hostname in groups["db02"]

- name: check master replication status
  become: true
  mysql_replication:
    mode: getprimary
  delegate_to: "{{ mysql_replication_master }}"
  register: primary
  when:
    - (replica.Is_Replica is defined and not replica.Is_Replica) or (replica.Is_Replica is not defined and replica is failed)
    - inventory_hostname in groups["db02"]

- name: configure replication on the slave
  become: true
  mysql_replication:
    mode: changeprimary
    primary_host: "{{ mysql_replication_master }}"
    primary_user: "{{ mysql_replication_user }}"
    primary_password: "{{ mysql_replication_user_password }}"
    primary_log_file: "{{ master.File }}"
    primary_log_pos: "{{ master.Position }}"
  when:
    - (replica.Is_Replica is defined and not replica.Is_Replica) or (replica.Is_Replica is not defined and replica is failed)
    - inventory_hostname in groups["db02"]

- name: Start replica
  become: true
  mysql_replication:
    mode: startslave
  when:
   - inventory_hostname in groups["db02"]
   - (replica.Is_Replica is defined and not replica.Is_Replica) or (replica.Is_Replica is not defined and replica is failed)

- name: restart mysql
  become: true
  systemd:
    name: mysql
    state: restarted
    enabled: yes
    daemon_reload: yes
